조인 과제 풀이


1. emp, dept 테이블에서 부서 번호가 30인 사원의 사번, 이름, 직급, 부서번호, 부서 위치를 출력 하시오

SELECT e.empno, e.ename, e.job, e.deptno, d.loc
FROM emp e, dept d
WHERE e.deptno = d.deptno
  AND e.deptno = 30



2. emp, dept 테이블에서 서울에서 근무하는 사원의 이름, 직급, 부서번호, 부서 이름을 출력 하시오

SELECT e.ename, e.job, d.deptno, d.dname, d.loc
FROM emp e, dept d
WHERE e.deptno = d.deptno
  AND d.loc = '서울';



3. emp, dept 테이블에서 성이 김씨인 사원의 사번, 이름, 직급, 급여, 부서명을 출력 하시오

SELECT e.empno, e.ename, e.job, d.deptno, d.dname
FROM emp e, dept d
WHERE e.deptno = d.deptno
  AND e.ename LIKE '김%';



4. 학생 테이블(STUDENT)과 교수 테이블(PROFESSOR)을 조인하여 학생의 이름과
지도교수 번호(PROFNO), 지도교수 이름을 출력 하시오

SELECT s.name 학생명, s.profno 교수번호, p.name 교수명
FROM student s, professor p
WHERE s.profno = p.profno;



5. 학생 테이블(STUDENT)과 학과 테이블(DEPARTMENT), 
교수 테이블(PROFESSOR)을 조인하여 학생의 이름과 학과명 지도교수를 출력 하시오

SELECT s.name 학생명, d.dname 학과명, p.name 교수명
FROM student s, department d, professor p
WHERE s.deptno1 = d.deptno
  AND s.profno = p.profno;


6. STUDENT, EXAM_01, HAKJUM 테이블에서 학생들의 이름과 점수 그리고 학점을 출력 하시오

SELECT s.name 학생명, e.total 점수, h.grade 학점 
FROM student s, exam_01 e, hakjum h
WHERE s.studno = e.studno
  AND e.total BETWEEN h.min_point AND h.max_point;



7. 위의 예제에서 학과명을 추가하고 학점이 제일 높은 학생부터 출력되게 하시오.
SELECT s.name 학생명, d.dname 학과명, e.total 점수, h.grade 학점 
FROM student s, department d, exam_01 e, hakjum h
WHERE s.studno = e.studno
  AND s.deptno1 = d.deptno  
  AND e.total BETWEEN h.min_point AND h.max_point
  ORDER BY e.total DESC;  



8.  GUEST, GIFT 테이블에서 고객의 마일리지 포인트 보다 낮은 포인트의 상품을 직접
선택할 수 있다고 할 때 노트북을 선택할 수 있는 고객명과 마일리지, 사은품을 출력 하시오
단, 마일리지가 제일 많은 고객부터 출력되게 하시오.

SELECT gs.gname 고객명, gs.point 마일리지, gf.gname 사은품 
FROM guest gs, gift gf
WHERE gs.point >= gf.g_start
  AND gf.gname = '노트북'
ORDER BY gs.point DESC;



9. STUDENT, PROFESSOR 테이블에서 학생이름, 지도교수 이름을 출력 하시오.
이때 지도교수가 없는 학생의 명단도 같이 출력되도록 하시오.

SELECT s.name 학생이름, p.name 지도교수 
FROM student s, professor p
WHERE s.profno = p.profno(+);



10. PROFESSOR 테이블에서 교수 번호, 이름, 입사일과 자신보다 입사일이 빠른 교수가
몇명인지 출력 하시오. 단, 인원수를 오름차순 정렬하시오.

-- 아래와 같이 ORDER BY 4를 지정하면 4번째 컬럼을 기준으로 정렬한다.
SELECT * FROM PROFESSOR ORDER BY hiredate;

SELECT p.profno 교수번호, p.name 이름, p.hiredate 입사일, COUNT(pa.hiredate) 인원수
FROM professor p, professor pa
WHERE p.hiredate > pa.hiredate(+) 
GROUP BY p.profno, p.name, p.hiredate
ORDER BY 4;

